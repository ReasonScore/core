"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClaimEdge = void 0;

var _newId = require("../newId");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Stores the relationship between a claim and an item (usually another claim).
 * This is directional as the edge points from one claim to it's parent.
 * This is just a data transfer object so it should have no logic in it
 * and only JSON compatible types string, number, object, array, boolean
 */
class ClaimEdge {
  constructor(parentId, childId, affects = 'confidence', pro = true, id = (0, _newId.newId)(), priority = "") {
    this.parentId = parentId;
    this.childId = childId;
    this.affects = affects;
    this.pro = pro;
    this.id = id;
    this.priority = priority;

    _defineProperty(this, "type", 'claimEdge');
  }

}

exports.ClaimEdge = ClaimEdge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kYXRhTW9kZWxzL0NsYWltRWRnZS50cyJdLCJuYW1lcyI6WyJDbGFpbUVkZ2UiLCJjb25zdHJ1Y3RvciIsInBhcmVudElkIiwiY2hpbGRJZCIsImFmZmVjdHMiLCJwcm8iLCJpZCIsInByaW9yaXR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7Ozs7QUFDQTs7Ozs7O0FBTU8sTUFBTUEsU0FBTixDQUFnQjtBQUduQkMsRUFBQUEsV0FBVyxDQUVBQyxRQUZBLEVBSUFDLE9BSkEsRUFNQUMsT0FBZ0IsR0FBRyxZQU5uQixFQVFBQyxHQUFZLEdBQUcsSUFSZixFQVNBQyxFQUFVLEdBQUcsbUJBVGIsRUFVQUMsUUFBZ0IsR0FBRyxFQVZuQixFQVdUO0FBQUEsU0FUU0wsUUFTVCxHQVRTQSxRQVNUO0FBQUEsU0FQU0MsT0FPVCxHQVBTQSxPQU9UO0FBQUEsU0FMU0MsT0FLVCxHQUxTQSxPQUtUO0FBQUEsU0FIU0MsR0FHVCxHQUhTQSxHQUdUO0FBQUEsU0FGU0MsRUFFVCxHQUZTQSxFQUVUO0FBQUEsU0FEU0MsUUFDVCxHQURTQSxRQUNUOztBQUFBLGtDQWJnQixXQWFoQjtBQUNEOztBQWZrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmZmVjdHMgfSBmcm9tIFwiLi9BZmZlY3RzXCJcclxuaW1wb3J0IHsgSXRlbVR5cGVzIH0gZnJvbSBcIi4vSXRlbVR5cGVzXCI7XHJcbmltcG9ydCB7IG5ld0lkIH0gZnJvbSBcIi4uL25ld0lkXCI7XHJcbi8qKlxyXG4gKiBTdG9yZXMgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGEgY2xhaW0gYW5kIGFuIGl0ZW0gKHVzdWFsbHkgYW5vdGhlciBjbGFpbSkuXHJcbiAqIFRoaXMgaXMgZGlyZWN0aW9uYWwgYXMgdGhlIGVkZ2UgcG9pbnRzIGZyb20gb25lIGNsYWltIHRvIGl0J3MgcGFyZW50LlxyXG4gKiBUaGlzIGlzIGp1c3QgYSBkYXRhIHRyYW5zZmVyIG9iamVjdCBzbyBpdCBzaG91bGQgaGF2ZSBubyBsb2dpYyBpbiBpdFxyXG4gKiBhbmQgb25seSBKU09OIGNvbXBhdGlibGUgdHlwZXMgc3RyaW5nLCBudW1iZXIsIG9iamVjdCwgYXJyYXksIGJvb2xlYW5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBDbGFpbUVkZ2Uge1xyXG4gICAgdHlwZTogSXRlbVR5cGVzID0gJ2NsYWltRWRnZSdcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICAvKiogVGhlIElEIGZvciB0aGUgcGFyZW50IGNsYWltIHRoaXMgZWRnZSBwb2ludHMgdG8gKi9cclxuICAgICAgICBwdWJsaWMgcGFyZW50SWQ6IHN0cmluZyxcclxuICAgICAgICAvKiogVGhlIElEIGZvciB0aGUgY2hpbGQgY2xhaW0gdGhpcyBlZGdlIHBvaW50cyBmcm9tICovXHJcbiAgICAgICAgcHVibGljIGNoaWxkSWQ6IHN0cmluZyxcclxuICAgICAgICAvKiogSG93IHRoZSBjaGlsZCBhZmZlY3RzIHRoZSBwYXJlbnQgc2NvcmUgKi9cclxuICAgICAgICBwdWJsaWMgYWZmZWN0czogQWZmZWN0cyA9ICdjb25maWRlbmNlJyxcclxuICAgICAgICAvKiogSXMgdGhlIGNoaWxkIGNsYWltIGEgcHJvIG9mIGl0J3MgcGFyZW50IChmYWxzZSBpZiBpdCBpcyBhIGNvbikgKi9cclxuICAgICAgICBwdWJsaWMgcHJvOiBib29sZWFuID0gdHJ1ZSxcclxuICAgICAgICBwdWJsaWMgaWQ6IHN0cmluZyA9IG5ld0lkKCksXHJcbiAgICAgICAgcHVibGljIHByaW9yaXR5OiBzdHJpbmcgPSBcIlwiLFxyXG4gICAgKSB7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgaUNsYWltRWRnZSB7XHJcbiAgICB0eXBlOiBJdGVtVHlwZXNcclxuXHJcbiAgICAvKiogVGhlIElEIGZvciB0aGUgcGFyZW50IGNsYWltIHRoaXMgZWRnZSBwb2ludHMgdG8gKi9cclxuICAgIHBhcmVudElkOiBzdHJpbmcsXHJcbiAgICAvKiogVGhlIElEIGZvciB0aGUgY2hpbGQgY2xhaW0gdGhpcyBlZGdlIHBvaW50cyBmcm9tICovXHJcbiAgICBjaGlsZElkOiBzdHJpbmcsXHJcbiAgICAvKiogSG93IHRoZSBjaGlsZCBhZmZlY3RzIHRoZSBwYXJlbnQgc2NvcmUgKi9cclxuICAgIGFmZmVjdHM6IEFmZmVjdHMsXHJcbiAgICAvKiogSXMgdGhlIGNoaWxkIGNsYWltIGEgcHJvIG9mIGl0J3MgcGFyZW50IChmYWxzZSBpZiBpdCBpcyBhIGNvbikgKi9cclxuICAgIHBybzogYm9vbGVhbixcclxuICAgIGlkOiBzdHJpbmcsXHJcbiAgICBwcmlvcml0eTogc3RyaW5nLFxyXG5cclxuICAgIC8qKiBhbGxvdyBmb3Igb3RoZXIgcHJvcGVydGllcyBieSBleHRlcm5hbCBpbXBsZW1lbnRhdGlvbnMgKi9cclxuICAgIC8vIFtvdGhlcnM6IHN0cmluZ106IGFueTtcclxufSJdfQ==