"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RepositoryLocalPure = void 0;

var _RsData = require("../dataModels/RsData");

var _claims = require("./reducers/claims");

var _claimEdges = require("./reducers/claimEdges");

var _RepositoryLocalBase = require("./RepositoryLocalBase");

var _scores = require("./reducers/scores");

class RepositoryLocalPure extends _RepositoryLocalBase.RepositoryLocalBase {
  constructor(rsData = new _RsData.RsData()) {
    super(rsData);
    this.rsData = rsData;
  }

  async notify(actions) {
    //this.rsData.actionsLog.push({actions:actions}); //TODO: put logs back is
    for (const action of actions) {
      //TODO: add more reducers
      this.rsData = (0, _claims.claims)(this.rsData, action);
      this.rsData = (0, _claimEdges.claimEdges)(this.rsData, action);
      this.rsData = (0, _scores.scores)(this.rsData, action);
    }
  }

}

exports.RepositoryLocalPure = RepositoryLocalPure;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZXBvc2l0b3JpZXMvUmVwb3NpdG9yeUxvY2FsUHVyZS50cyJdLCJuYW1lcyI6WyJSZXBvc2l0b3J5TG9jYWxQdXJlIiwiUmVwb3NpdG9yeUxvY2FsQmFzZSIsImNvbnN0cnVjdG9yIiwicnNEYXRhIiwiUnNEYXRhIiwibm90aWZ5IiwiYWN0aW9ucyIsImFjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUdPLE1BQU1BLG1CQUFOLFNBQWtDQyx3Q0FBbEMsQ0FBNkU7QUFFaEZDLEVBQUFBLFdBQVcsQ0FDQUMsTUFBZSxHQUFHLElBQUlDLGNBQUosRUFEbEIsRUFFVDtBQUNFLFVBQU1ELE1BQU47QUFERixTQURTQSxNQUNULEdBRFNBLE1BQ1Q7QUFFRDs7QUFFRCxRQUFNRSxNQUFOLENBQWFDLE9BQWIsRUFBaUM7QUFDN0I7QUFDQSxTQUFLLE1BQU1DLE1BQVgsSUFBcUJELE9BQXJCLEVBQThCO0FBQzFCO0FBQ0EsV0FBS0gsTUFBTCxHQUFjLG9CQUFPLEtBQUtBLE1BQVosRUFBb0JJLE1BQXBCLENBQWQ7QUFDQSxXQUFLSixNQUFMLEdBQWMsNEJBQVcsS0FBS0EsTUFBaEIsRUFBd0JJLE1BQXhCLENBQWQ7QUFDQSxXQUFLSixNQUFMLEdBQWMsb0JBQU8sS0FBS0EsTUFBWixFQUFvQkksTUFBcEIsQ0FBZDtBQUNIO0FBQ0o7O0FBaEIrRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlBY3Rpb24gfSBmcm9tIFwiLi4vZGF0YU1vZGVscy9BY3Rpb25cIjtcclxuaW1wb3J0IHsgUnNEYXRhLCBpUnNEYXRhIH0gZnJvbSBcIi4uL2RhdGFNb2RlbHMvUnNEYXRhXCI7XHJcbmltcG9ydCB7IGlSZXBvc2l0b3J5IH0gZnJvbSBcIi4uL2RhdGFNb2RlbHMvaVJlcG9zaXRvcnlcIjtcclxuaW1wb3J0IHsgY2xhaW1zIH0gZnJvbSBcIi4vcmVkdWNlcnMvY2xhaW1zXCI7XHJcbmltcG9ydCB7IGNsYWltRWRnZXMgfSBmcm9tIFwiLi9yZWR1Y2Vycy9jbGFpbUVkZ2VzXCI7XHJcbmltcG9ydCB7IFJlcG9zaXRvcnlMb2NhbEJhc2UgfSBmcm9tIFwiLi9SZXBvc2l0b3J5TG9jYWxCYXNlXCI7XHJcbmltcG9ydCB7IHNjb3JlcyB9IGZyb20gXCIuL3JlZHVjZXJzL3Njb3Jlc1wiO1xyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBSZXBvc2l0b3J5TG9jYWxQdXJlIGV4dGVuZHMgUmVwb3NpdG9yeUxvY2FsQmFzZSBpbXBsZW1lbnRzIGlSZXBvc2l0b3J5IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwdWJsaWMgcnNEYXRhOiBpUnNEYXRhID0gbmV3IFJzRGF0YSgpXHJcbiAgICApIHtcclxuICAgICAgICBzdXBlcihyc0RhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIG5vdGlmeShhY3Rpb25zOiBpQWN0aW9uW10pIHtcclxuICAgICAgICAvL3RoaXMucnNEYXRhLmFjdGlvbnNMb2cucHVzaCh7YWN0aW9uczphY3Rpb25zfSk7IC8vVE9ETzogcHV0IGxvZ3MgYmFjayBpc1xyXG4gICAgICAgIGZvciAoY29uc3QgYWN0aW9uIG9mIGFjdGlvbnMpIHtcclxuICAgICAgICAgICAgLy9UT0RPOiBhZGQgbW9yZSByZWR1Y2Vyc1xyXG4gICAgICAgICAgICB0aGlzLnJzRGF0YSA9IGNsYWltcyh0aGlzLnJzRGF0YSwgYWN0aW9uKTtcclxuICAgICAgICAgICAgdGhpcy5yc0RhdGEgPSBjbGFpbUVkZ2VzKHRoaXMucnNEYXRhLCBhY3Rpb24pO1xyXG4gICAgICAgICAgICB0aGlzLnJzRGF0YSA9IHNjb3Jlcyh0aGlzLnJzRGF0YSwgYWN0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59Il19