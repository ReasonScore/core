"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateScore = calculateScore;

/**
 * Calculates a new score based on the child scores passed in.
 */
function calculateScore({
  childScores = [],
  reversible = true
} = {}) {
  const newScore = {
    confidence: 1,
    relevance: 1
  };
  let childrenConfidence = 0;
  let childrenRelevance = 0;

  if (childScores.filter(s => s.affects === 'confidence').length < 1) {
    // If there are no children that affect the confidence of the claim
    // then assume the claim is 100% confident and start strength and relevance at 1
    childrenConfidence = 1;
    childrenRelevance = 1;
  }

  childScores.forEach(score => {
    //Ensure calculations for non-reversible scores don't allow the confident to be below 0
    let confidence = score.confidence;

    if (!score.reversible && score.confidence < 0) {
      confidence = 0;
    } // Loop through the child scores and determine the score of the parent.


    if (score.affects === 'confidence') {
      //calculate the reduction of the relevance bease on the distance of the confidence from zero
      //TODO: maybe add a flag on the claimEdge to be able to turn this off in the case of a claim that should draw the parent towards zero
      //Like "This claim should require supporting evidence"
      let confidenceRelevanceAdjustment = 1;
      confidenceRelevanceAdjustment = Math.abs(confidence); // Process edges that affect confidence

      if (score.pro) {
        childrenConfidence += confidence * score.relevance * confidenceRelevanceAdjustment; // Add up all the strength of the children

        childrenRelevance += score.relevance * confidenceRelevanceAdjustment; //Add up the relevance separately so we can do a weighted agerage later
      } else {
        childrenConfidence -= confidence * score.relevance * confidenceRelevanceAdjustment;
        childrenRelevance += score.relevance * confidenceRelevanceAdjustment;
      }
    }

    if (score.affects === 'relevance') {
      // Process Relevance child claims
      if (newScore.relevance == undefined) {
        newScore.relevance = 1;
      }

      if (score.pro) {
        newScore.relevance += confidence; // Add up all the strength of the children
      } else {
        newScore.relevance -= confidence / 2;
      }
    }
  });

  if (childrenRelevance === 0) {
    // Protect against division by zero
    newScore.confidence = 0;
  } else {
    //Calculate the score
    newScore.confidence = childrenConfidence / childrenRelevance;
  }

  if (Object.is(newScore.confidence, -0)) {
    // Protect against negative zero 
    newScore.confidence = 0;
  }

  return newScore;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jYWxjdWxhdGVTY29yZS50cyJdLCJuYW1lcyI6WyJjYWxjdWxhdGVTY29yZSIsImNoaWxkU2NvcmVzIiwicmV2ZXJzaWJsZSIsIm5ld1Njb3JlIiwiY29uZmlkZW5jZSIsInJlbGV2YW5jZSIsImNoaWxkcmVuQ29uZmlkZW5jZSIsImNoaWxkcmVuUmVsZXZhbmNlIiwiZmlsdGVyIiwicyIsImFmZmVjdHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwic2NvcmUiLCJjb25maWRlbmNlUmVsZXZhbmNlQWRqdXN0bWVudCIsIk1hdGgiLCJhYnMiLCJwcm8iLCJ1bmRlZmluZWQiLCJPYmplY3QiLCJpcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVNBOzs7QUFHTyxTQUFTQSxjQUFULENBQXdCO0FBQUVDLEVBQUFBLFdBQVcsR0FBRyxFQUFoQjtBQUFvQkMsRUFBQUEsVUFBVSxHQUFHO0FBQWpDLElBSzNCLEVBTEcsRUFNVztBQUVkLFFBQU1DLFFBQXdCLEdBQUc7QUFDN0JDLElBQUFBLFVBQVUsRUFBRSxDQURpQjtBQUU3QkMsSUFBQUEsU0FBUyxFQUFFO0FBRmtCLEdBQWpDO0FBS0EsTUFBSUMsa0JBQWtCLEdBQUcsQ0FBekI7QUFDQSxNQUFJQyxpQkFBaUIsR0FBRyxDQUF4Qjs7QUFFQSxNQUFJTixXQUFXLENBQUNPLE1BQVosQ0FBbUJDLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxPQUFGLEtBQWMsWUFBdEMsRUFBb0RDLE1BQXBELEdBQTZELENBQWpFLEVBQW9FO0FBQ2hFO0FBQ0E7QUFDQUwsSUFBQUEsa0JBQWtCLEdBQUcsQ0FBckI7QUFDQUMsSUFBQUEsaUJBQWlCLEdBQUcsQ0FBcEI7QUFDSDs7QUFFRE4sRUFBQUEsV0FBVyxDQUFDVyxPQUFaLENBQW9CQyxLQUFLLElBQUk7QUFDekI7QUFDQSxRQUFJVCxVQUFVLEdBQUdTLEtBQUssQ0FBQ1QsVUFBdkI7O0FBQ0EsUUFBSSxDQUFDUyxLQUFLLENBQUNYLFVBQVAsSUFBcUJXLEtBQUssQ0FBQ1QsVUFBTixHQUFtQixDQUE1QyxFQUErQztBQUMzQ0EsTUFBQUEsVUFBVSxHQUFHLENBQWI7QUFDSCxLQUx3QixDQU96Qjs7O0FBQ0EsUUFBSVMsS0FBSyxDQUFDSCxPQUFOLEtBQWtCLFlBQXRCLEVBQW9DO0FBRWhDO0FBQ0E7QUFDQTtBQUNBLFVBQUlJLDZCQUE2QixHQUFHLENBQXBDO0FBQ0FBLE1BQUFBLDZCQUE2QixHQUFHQyxJQUFJLENBQUNDLEdBQUwsQ0FBU1osVUFBVCxDQUFoQyxDQU5nQyxDQVFoQzs7QUFDQSxVQUFJUyxLQUFLLENBQUNJLEdBQVYsRUFBZTtBQUNYWCxRQUFBQSxrQkFBa0IsSUFBSUYsVUFBVSxHQUFHUyxLQUFLLENBQUNSLFNBQW5CLEdBQStCUyw2QkFBckQsQ0FEVyxDQUN5RTs7QUFDcEZQLFFBQUFBLGlCQUFpQixJQUFJTSxLQUFLLENBQUNSLFNBQU4sR0FBa0JTLDZCQUF2QyxDQUZXLENBRTJEO0FBQ3pFLE9BSEQsTUFHTztBQUNIUixRQUFBQSxrQkFBa0IsSUFBSUYsVUFBVSxHQUFHUyxLQUFLLENBQUNSLFNBQW5CLEdBQStCUyw2QkFBckQ7QUFDQVAsUUFBQUEsaUJBQWlCLElBQUlNLEtBQUssQ0FBQ1IsU0FBTixHQUFrQlMsNkJBQXZDO0FBQ0g7QUFDSjs7QUFFRCxRQUFJRCxLQUFLLENBQUNILE9BQU4sS0FBa0IsV0FBdEIsRUFBbUM7QUFDL0I7QUFDQSxVQUFJUCxRQUFRLENBQUNFLFNBQVQsSUFBc0JhLFNBQTFCLEVBQXFDO0FBQ2pDZixRQUFBQSxRQUFRLENBQUNFLFNBQVQsR0FBcUIsQ0FBckI7QUFDSDs7QUFDRCxVQUFJUSxLQUFLLENBQUNJLEdBQVYsRUFBZTtBQUNYZCxRQUFBQSxRQUFRLENBQUNFLFNBQVQsSUFBc0JELFVBQXRCLENBRFcsQ0FDdUI7QUFDckMsT0FGRCxNQUVPO0FBQ0hELFFBQUFBLFFBQVEsQ0FBQ0UsU0FBVCxJQUFzQkQsVUFBVSxHQUFHLENBQW5DO0FBQ0g7QUFDSjtBQUNKLEdBckNEOztBQXVDQSxNQUFJRyxpQkFBaUIsS0FBSyxDQUExQixFQUE2QjtBQUN6QjtBQUNBSixJQUFBQSxRQUFRLENBQUNDLFVBQVQsR0FBc0IsQ0FBdEI7QUFDSCxHQUhELE1BR087QUFDSDtBQUNBRCxJQUFBQSxRQUFRLENBQUNDLFVBQVQsR0FBc0JFLGtCQUFrQixHQUFHQyxpQkFBM0M7QUFDSDs7QUFFRCxNQUFJWSxNQUFNLENBQUNDLEVBQVAsQ0FBVWpCLFFBQVEsQ0FBQ0MsVUFBbkIsRUFBK0IsQ0FBQyxDQUFoQyxDQUFKLEVBQXdDO0FBQ3BDO0FBQ0FELElBQUFBLFFBQVEsQ0FBQ0MsVUFBVCxHQUFzQixDQUF0QjtBQUNIOztBQUVELFNBQU9ELFFBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlTY29yZSwgaVNjb3JlRnJhZ21lbnQgfSBmcm9tIFwiLi9kYXRhTW9kZWxzL1Njb3JlXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIGlDYWxjdWxhdGVTY29yZSB7XHJcbiAgICAoeyBjaGlsZFNjb3JlcyB9OiB7XHJcbiAgICAgICAgLyoqIEFuIGFycmF5IG9mIGdyb3VwZWQgZWRnZXMgYW5kIGNsYWltcyovXHJcbiAgICAgICAgY2hpbGRTY29yZXM/OiBpU2NvcmVbXTtcclxuICAgIH0pOiBpU2NvcmVGcmFnbWVudFxyXG59XHJcblxyXG4vKipcclxuICogQ2FsY3VsYXRlcyBhIG5ldyBzY29yZSBiYXNlZCBvbiB0aGUgY2hpbGQgc2NvcmVzIHBhc3NlZCBpbi5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVTY29yZSh7IGNoaWxkU2NvcmVzID0gW10sIHJldmVyc2libGUgPSB0cnVlIH06IHtcclxuICAgIC8qKiBBbiBhcnJheSBvZiBncm91cGVkIGVkZ2VzIGFuZCBjbGFpbXMqL1xyXG4gICAgY2hpbGRTY29yZXM/OiBpU2NvcmVbXTtcclxuICAgIC8qKiBDYW4gdGhpcyBzY29yZSBmYWxsIGJlbG93IGEgMCBjb25maWRlbmNlIChoYXZlIGEgbmVnYXRpdmUgY29uZmlkZW5jZSkgKi9cclxuICAgIHJldmVyc2libGU/OiBib29sZWFuXHJcbn0gPSB7fSxcclxuKTogaVNjb3JlRnJhZ21lbnQge1xyXG5cclxuICAgIGNvbnN0IG5ld1Njb3JlOiBpU2NvcmVGcmFnbWVudCA9IHtcclxuICAgICAgICBjb25maWRlbmNlOiAxLFxyXG4gICAgICAgIHJlbGV2YW5jZTogMSxcclxuICAgIH07XHJcblxyXG4gICAgbGV0IGNoaWxkcmVuQ29uZmlkZW5jZSA9IDBcclxuICAgIGxldCBjaGlsZHJlblJlbGV2YW5jZSA9IDBcclxuXHJcbiAgICBpZiAoY2hpbGRTY29yZXMuZmlsdGVyKHMgPT4gcy5hZmZlY3RzID09PSAnY29uZmlkZW5jZScpLmxlbmd0aCA8IDEpIHtcclxuICAgICAgICAvLyBJZiB0aGVyZSBhcmUgbm8gY2hpbGRyZW4gdGhhdCBhZmZlY3QgdGhlIGNvbmZpZGVuY2Ugb2YgdGhlIGNsYWltXHJcbiAgICAgICAgLy8gdGhlbiBhc3N1bWUgdGhlIGNsYWltIGlzIDEwMCUgY29uZmlkZW50IGFuZCBzdGFydCBzdHJlbmd0aCBhbmQgcmVsZXZhbmNlIGF0IDFcclxuICAgICAgICBjaGlsZHJlbkNvbmZpZGVuY2UgPSAxO1xyXG4gICAgICAgIGNoaWxkcmVuUmVsZXZhbmNlID0gMTtcclxuICAgIH1cclxuXHJcbiAgICBjaGlsZFNjb3Jlcy5mb3JFYWNoKHNjb3JlID0+IHtcclxuICAgICAgICAvL0Vuc3VyZSBjYWxjdWxhdGlvbnMgZm9yIG5vbi1yZXZlcnNpYmxlIHNjb3JlcyBkb24ndCBhbGxvdyB0aGUgY29uZmlkZW50IHRvIGJlIGJlbG93IDBcclxuICAgICAgICBsZXQgY29uZmlkZW5jZSA9IHNjb3JlLmNvbmZpZGVuY2VcclxuICAgICAgICBpZiAoIXNjb3JlLnJldmVyc2libGUgJiYgc2NvcmUuY29uZmlkZW5jZSA8IDApIHtcclxuICAgICAgICAgICAgY29uZmlkZW5jZSA9IDBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCB0aGUgY2hpbGQgc2NvcmVzIGFuZCBkZXRlcm1pbmUgdGhlIHNjb3JlIG9mIHRoZSBwYXJlbnQuXHJcbiAgICAgICAgaWYgKHNjb3JlLmFmZmVjdHMgPT09ICdjb25maWRlbmNlJykge1xyXG5cclxuICAgICAgICAgICAgLy9jYWxjdWxhdGUgdGhlIHJlZHVjdGlvbiBvZiB0aGUgcmVsZXZhbmNlIGJlYXNlIG9uIHRoZSBkaXN0YW5jZSBvZiB0aGUgY29uZmlkZW5jZSBmcm9tIHplcm9cclxuICAgICAgICAgICAgLy9UT0RPOiBtYXliZSBhZGQgYSBmbGFnIG9uIHRoZSBjbGFpbUVkZ2UgdG8gYmUgYWJsZSB0byB0dXJuIHRoaXMgb2ZmIGluIHRoZSBjYXNlIG9mIGEgY2xhaW0gdGhhdCBzaG91bGQgZHJhdyB0aGUgcGFyZW50IHRvd2FyZHMgemVyb1xyXG4gICAgICAgICAgICAvL0xpa2UgXCJUaGlzIGNsYWltIHNob3VsZCByZXF1aXJlIHN1cHBvcnRpbmcgZXZpZGVuY2VcIlxyXG4gICAgICAgICAgICBsZXQgY29uZmlkZW5jZVJlbGV2YW5jZUFkanVzdG1lbnQgPSAxXHJcbiAgICAgICAgICAgIGNvbmZpZGVuY2VSZWxldmFuY2VBZGp1c3RtZW50ID0gTWF0aC5hYnMoY29uZmlkZW5jZSlcclxuXHJcbiAgICAgICAgICAgIC8vIFByb2Nlc3MgZWRnZXMgdGhhdCBhZmZlY3QgY29uZmlkZW5jZVxyXG4gICAgICAgICAgICBpZiAoc2NvcmUucHJvKSB7XHJcbiAgICAgICAgICAgICAgICBjaGlsZHJlbkNvbmZpZGVuY2UgKz0gY29uZmlkZW5jZSAqIHNjb3JlLnJlbGV2YW5jZSAqIGNvbmZpZGVuY2VSZWxldmFuY2VBZGp1c3RtZW50OyAvLyBBZGQgdXAgYWxsIHRoZSBzdHJlbmd0aCBvZiB0aGUgY2hpbGRyZW5cclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuUmVsZXZhbmNlICs9IHNjb3JlLnJlbGV2YW5jZSAqIGNvbmZpZGVuY2VSZWxldmFuY2VBZGp1c3RtZW50OyAvL0FkZCB1cCB0aGUgcmVsZXZhbmNlIHNlcGFyYXRlbHkgc28gd2UgY2FuIGRvIGEgd2VpZ2h0ZWQgYWdlcmFnZSBsYXRlclxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY2hpbGRyZW5Db25maWRlbmNlIC09IGNvbmZpZGVuY2UgKiBzY29yZS5yZWxldmFuY2UgKiBjb25maWRlbmNlUmVsZXZhbmNlQWRqdXN0bWVudDtcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuUmVsZXZhbmNlICs9IHNjb3JlLnJlbGV2YW5jZSAqIGNvbmZpZGVuY2VSZWxldmFuY2VBZGp1c3RtZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoc2NvcmUuYWZmZWN0cyA9PT0gJ3JlbGV2YW5jZScpIHtcclxuICAgICAgICAgICAgLy8gUHJvY2VzcyBSZWxldmFuY2UgY2hpbGQgY2xhaW1zXHJcbiAgICAgICAgICAgIGlmIChuZXdTY29yZS5yZWxldmFuY2UgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdTY29yZS5yZWxldmFuY2UgPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzY29yZS5wcm8pIHtcclxuICAgICAgICAgICAgICAgIG5ld1Njb3JlLnJlbGV2YW5jZSArPSBjb25maWRlbmNlOyAvLyBBZGQgdXAgYWxsIHRoZSBzdHJlbmd0aCBvZiB0aGUgY2hpbGRyZW5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG5ld1Njb3JlLnJlbGV2YW5jZSAtPSBjb25maWRlbmNlIC8gMjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGlmIChjaGlsZHJlblJlbGV2YW5jZSA9PT0gMCkge1xyXG4gICAgICAgIC8vIFByb3RlY3QgYWdhaW5zdCBkaXZpc2lvbiBieSB6ZXJvXHJcbiAgICAgICAgbmV3U2NvcmUuY29uZmlkZW5jZSA9IDA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vQ2FsY3VsYXRlIHRoZSBzY29yZVxyXG4gICAgICAgIG5ld1Njb3JlLmNvbmZpZGVuY2UgPSBjaGlsZHJlbkNvbmZpZGVuY2UgLyBjaGlsZHJlblJlbGV2YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoT2JqZWN0LmlzKG5ld1Njb3JlLmNvbmZpZGVuY2UsIC0wKSkge1xyXG4gICAgICAgIC8vIFByb3RlY3QgYWdhaW5zdCBuZWdhdGl2ZSB6ZXJvIFxyXG4gICAgICAgIG5ld1Njb3JlLmNvbmZpZGVuY2UgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBuZXdTY29yZTtcclxufVxyXG5cclxuIl19