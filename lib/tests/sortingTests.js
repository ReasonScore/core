"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortingTests = sortingTests;

// This code is currently used in Reason Score\editor\src\ScoreElement.tsx but is tested here just because the test  framework is set up
const ScoreSorter = (a, b) => {
  // if ((a.priority === undefined || a.priority === "")) return 1;
  // if ((b.priority === undefined || b.priority === ""))  return -1;
  if (a.priority > b.priority) return 1;
  if (a.priority < b.priority) return -1;
  if (a.descendantCount > b.descendantCount) return 1;
  if (b.descendantCount > a.descendantCount) return -1;
  if (a.confidence > b.confidence) return 1;
  if (b.confidence > a.confidence) return -1;
  return 0;
};

function sortingTests() {
  test('Priorities: "":""', async () => {
    expect(ScoreSorter({
      priority: ""
    }, {
      priority: ""
    })).toEqual(0);
  });
  test('Priorities: a:""', async () => {
    expect(ScoreSorter({
      priority: "a"
    }, {
      priority: ""
    })).toEqual(1);
  });
  test('Priorities: "":a', async () => {
    expect(ScoreSorter({
      priority: ""
    }, {
      priority: "a"
    })).toEqual(-1);
  });
  test('Count: 0:1', async () => {
    expect(ScoreSorter({
      priority: "",
      descendantCount: 0
    }, {
      priority: "",
      descendantCount: 1
    })).toEqual(1);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0cy9zb3J0aW5nVGVzdHMudHMiXSwibmFtZXMiOlsiU2NvcmVTb3J0ZXIiLCJhIiwiYiIsInByaW9yaXR5IiwiZGVzY2VuZGFudENvdW50IiwiY29uZmlkZW5jZSIsInNvcnRpbmdUZXN0cyIsInRlc3QiLCJleHBlY3QiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7QUFDQSxNQUFNQSxXQUFXLEdBQUcsQ0FBQ0MsQ0FBRCxFQUFXQyxDQUFYLEtBQXdCO0FBQ3hDO0FBQ0E7QUFDQSxNQUFJRCxDQUFDLENBQUNFLFFBQUYsR0FBYUQsQ0FBQyxDQUFDQyxRQUFuQixFQUE2QixPQUFPLENBQVA7QUFDN0IsTUFBSUYsQ0FBQyxDQUFDRSxRQUFGLEdBQWFELENBQUMsQ0FBQ0MsUUFBbkIsRUFBNkIsT0FBTyxDQUFDLENBQVI7QUFDN0IsTUFBSUYsQ0FBQyxDQUFDRyxlQUFGLEdBQW9CRixDQUFDLENBQUNFLGVBQTFCLEVBQTJDLE9BQU8sQ0FBUDtBQUMzQyxNQUFJRixDQUFDLENBQUNFLGVBQUYsR0FBb0JILENBQUMsQ0FBQ0csZUFBMUIsRUFBMkMsT0FBTyxDQUFDLENBQVI7QUFDM0MsTUFBSUgsQ0FBQyxDQUFDSSxVQUFGLEdBQWVILENBQUMsQ0FBQ0csVUFBckIsRUFBaUMsT0FBTyxDQUFQO0FBQ2pDLE1BQUlILENBQUMsQ0FBQ0csVUFBRixHQUFlSixDQUFDLENBQUNJLFVBQXJCLEVBQWlDLE9BQU8sQ0FBQyxDQUFSO0FBQ2pDLFNBQU8sQ0FBUDtBQUNILENBVkQ7O0FBWU8sU0FBU0MsWUFBVCxHQUF3QjtBQUMzQkMsRUFBQUEsSUFBSSxDQUFDLG1CQUFELEVBQXNCLFlBQVk7QUFDbENDLElBQUFBLE1BQU0sQ0FBQ1IsV0FBVyxDQUNkO0FBQUVHLE1BQUFBLFFBQVEsRUFBRTtBQUFaLEtBRGMsRUFFZDtBQUFFQSxNQUFBQSxRQUFRLEVBQUU7QUFBWixLQUZjLENBQVosQ0FBTixDQUdHTSxPQUhILENBR1csQ0FIWDtBQUlILEdBTEcsQ0FBSjtBQU9BRixFQUFBQSxJQUFJLENBQUMsa0JBQUQsRUFBcUIsWUFBWTtBQUNqQ0MsSUFBQUEsTUFBTSxDQUFDUixXQUFXLENBQ2Q7QUFBRUcsTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FEYyxFQUVkO0FBQUVBLE1BQUFBLFFBQVEsRUFBRTtBQUFaLEtBRmMsQ0FBWixDQUFOLENBR0dNLE9BSEgsQ0FHVyxDQUhYO0FBSUgsR0FMRyxDQUFKO0FBT0FGLEVBQUFBLElBQUksQ0FBQyxrQkFBRCxFQUFxQixZQUFZO0FBQ2pDQyxJQUFBQSxNQUFNLENBQUNSLFdBQVcsQ0FDZDtBQUFFRyxNQUFBQSxRQUFRLEVBQUU7QUFBWixLQURjLEVBRWQ7QUFBRUEsTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FGYyxDQUFaLENBQU4sQ0FHR00sT0FISCxDQUdXLENBQUMsQ0FIWjtBQUlILEdBTEcsQ0FBSjtBQU9BRixFQUFBQSxJQUFJLENBQUMsWUFBRCxFQUFlLFlBQVk7QUFDM0JDLElBQUFBLE1BQU0sQ0FBQ1IsV0FBVyxDQUNkO0FBQUVHLE1BQUFBLFFBQVEsRUFBRSxFQUFaO0FBQWdCQyxNQUFBQSxlQUFlLEVBQUM7QUFBaEMsS0FEYyxFQUVkO0FBQUVELE1BQUFBLFFBQVEsRUFBRSxFQUFaO0FBQWdCQyxNQUFBQSxlQUFlLEVBQUM7QUFBaEMsS0FGYyxDQUFaLENBQU4sQ0FHR0ssT0FISCxDQUdXLENBSFg7QUFJSCxHQUxHLENBQUo7QUFNSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjb3JlIH0gZnJvbSBcIi4uL2RhdGFNb2RlbHMvU2NvcmVcIjtcclxuXHJcbi8vIFRoaXMgY29kZSBpcyBjdXJyZW50bHkgdXNlZCBpbiBSZWFzb24gU2NvcmVcXGVkaXRvclxcc3JjXFxTY29yZUVsZW1lbnQudHN4IGJ1dCBpcyB0ZXN0ZWQgaGVyZSBqdXN0IGJlY2F1c2UgdGhlIHRlc3QgIGZyYW1ld29yayBpcyBzZXQgdXBcclxuY29uc3QgU2NvcmVTb3J0ZXIgPSAoYTogU2NvcmUsIGI6IFNjb3JlKSA9PiB7XHJcbiAgICAvLyBpZiAoKGEucHJpb3JpdHkgPT09IHVuZGVmaW5lZCB8fCBhLnByaW9yaXR5ID09PSBcIlwiKSkgcmV0dXJuIDE7XHJcbiAgICAvLyBpZiAoKGIucHJpb3JpdHkgPT09IHVuZGVmaW5lZCB8fCBiLnByaW9yaXR5ID09PSBcIlwiKSkgIHJldHVybiAtMTtcclxuICAgIGlmIChhLnByaW9yaXR5ID4gYi5wcmlvcml0eSkgcmV0dXJuIDE7XHJcbiAgICBpZiAoYS5wcmlvcml0eSA8IGIucHJpb3JpdHkpIHJldHVybiAtMTtcclxuICAgIGlmIChhLmRlc2NlbmRhbnRDb3VudCA+IGIuZGVzY2VuZGFudENvdW50KSByZXR1cm4gMTtcclxuICAgIGlmIChiLmRlc2NlbmRhbnRDb3VudCA+IGEuZGVzY2VuZGFudENvdW50KSByZXR1cm4gLTE7XHJcbiAgICBpZiAoYS5jb25maWRlbmNlID4gYi5jb25maWRlbmNlKSByZXR1cm4gMTtcclxuICAgIGlmIChiLmNvbmZpZGVuY2UgPiBhLmNvbmZpZGVuY2UpIHJldHVybiAtMTtcclxuICAgIHJldHVybiAwO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc29ydGluZ1Rlc3RzKCkge1xyXG4gICAgdGVzdCgnUHJpb3JpdGllczogXCJcIjpcIlwiJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGV4cGVjdChTY29yZVNvcnRlcihcclxuICAgICAgICAgICAgeyBwcmlvcml0eTogXCJcIiB9IGFzIFNjb3JlLFxyXG4gICAgICAgICAgICB7IHByaW9yaXR5OiBcIlwiIH0gYXMgU2NvcmVcclxuICAgICAgICApKS50b0VxdWFsKDApXHJcbiAgICB9KTtcclxuXHJcbiAgICB0ZXN0KCdQcmlvcml0aWVzOiBhOlwiXCInLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgZXhwZWN0KFNjb3JlU29ydGVyKFxyXG4gICAgICAgICAgICB7IHByaW9yaXR5OiBcImFcIiB9IGFzIFNjb3JlLFxyXG4gICAgICAgICAgICB7IHByaW9yaXR5OiBcIlwiIH0gYXMgU2NvcmVcclxuICAgICAgICApKS50b0VxdWFsKDEpXHJcbiAgICB9KTtcclxuXHJcbiAgICB0ZXN0KCdQcmlvcml0aWVzOiBcIlwiOmEnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgZXhwZWN0KFNjb3JlU29ydGVyKFxyXG4gICAgICAgICAgICB7IHByaW9yaXR5OiBcIlwiIH0gYXMgU2NvcmUsXHJcbiAgICAgICAgICAgIHsgcHJpb3JpdHk6IFwiYVwiIH0gYXMgU2NvcmVcclxuICAgICAgICApKS50b0VxdWFsKC0xKVxyXG4gICAgfSk7XHJcblxyXG4gICAgdGVzdCgnQ291bnQ6IDA6MScsIGFzeW5jICgpID0+IHtcclxuICAgICAgICBleHBlY3QoU2NvcmVTb3J0ZXIoXHJcbiAgICAgICAgICAgIHsgcHJpb3JpdHk6IFwiXCIsIGRlc2NlbmRhbnRDb3VudDowIH0gYXMgU2NvcmUsXHJcbiAgICAgICAgICAgIHsgcHJpb3JpdHk6IFwiXCIsIGRlc2NlbmRhbnRDb3VudDoxIH0gYXMgU2NvcmVcclxuICAgICAgICApKS50b0VxdWFsKDEpXHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbiJdfQ==