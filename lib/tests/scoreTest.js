"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scoreTests = scoreTests;

var _RepositoryLocalPure = require("../repositories/RepositoryLocalPure");

var _calculateScoreActions = require("../calculateScoreActions");

var _Action = require("../dataModels/Action");

var _Claim = require("../dataModels/Claim");

var _ScoreTree = require("../dataModels/ScoreTree");

var _ClaimEdge = require("../dataModels/ClaimEdge");

var _buildTestResults = require("./buildTestResults");

function scoreTests() {
  const u = undefined,
        pro = true,
        con = false;
  const actionsBase = [new _Action.Action(new _Claim.Claim('mainClaim', 'mainClaim'), u, 'add_claim'), new _Action.Action(new _ScoreTree.ScoreTree('mainClaim', 'mainClaim-score', u, 'ScoreTree'), u, 'add_scoreTree'), new _Action.Action(new _Claim.Claim('01', '01'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '01', u, con, '01-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02', '02'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '02', u, pro, '02-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-1', '02-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02', '02-1', u, pro, '02-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-2', '02-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02', '02-2', u, con, '02-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('03', '03'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '03', u, pro, '03-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('03-1', '03-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('03', '03-1', u, con, '03-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('03-2', '03-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('03', '03-2', u, pro, '03-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('03-3', '03-3'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('03', '03-3', u, pro, '03-3-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('04', '04'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '04', u, pro, '04-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('04-1', '04-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('04', '04-1', 'relevance', pro, '04-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('05', '05'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '05', u, pro, '05-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('05-1', '05-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('05', '05-1', u, con, '05-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('06', '06'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '06', u, con, '06-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('06-1', '06-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('06', '06-1', u, con, '06-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('07', '07'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '07', u, pro, '07-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('07-1', '07-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('07', '07-1', u, con, '07-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('08', '08'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '08', u, con, '08-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('08-1', '08-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('08', '08-1', u, con, '08-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('09', '09'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '09', u, pro, '09-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('09-1', '09-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('09', '09-1', u, pro, '09-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('09-1-2', '09-1-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('09-1', '09-1-2', u, con, '09-1-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('10', '10'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '10', u, con, '10-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('10-1', '10-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('10', '10-1', u, pro, '10-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('10-1-1', '10-1-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('10-1', '10-1-1', u, con, '10-1-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('11', '11'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '11', u, con, '11-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('11-1', '11-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('11', '11-1', u, con, '11-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('11-2', '11-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('11-1', '11-2', u, con, '11-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12', '12'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '12', u, pro, '12-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12-1', '12-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('12', '12-1', u, pro, '12-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12-2', '12-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('12-1', '12-2', u, pro, '12-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12-3', '12-3'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('12-2', '12-3', u, pro, '12-3-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12-4', '12-4'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('12-3', '12-4', u, pro, '12-4-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12-5', '12-5'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('12-4', '12-5', u, pro, '12-5-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('12-6', '12-6'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('12-5', '12-6', u, pro, '12-6-edge'), u, 'add_claimEdge')];
  test('Original Scores', async () => {
    const repository = new _RepositoryLocalPure.RepositoryLocalPure();
    await (0, _calculateScoreActions.calculateScoreActions)({
      actions: actionsBase,
      repository: repository
    });
    const expectations = [['getScoresBySourceId.mainClaim.confidence', 0.48717948717948717], ['getScoresBySourceId.01.confidence', 1], ['getScoresBySourceId.02.confidence', 0], ['getScoresBySourceId.02-1.confidence', 1], ['getScoresBySourceId.02-2.confidence', 1], ['getScoresBySourceId.03.confidence', 0.3333333333333333], ['getScoresBySourceId.03-1.confidence', 1], ['getScoresBySourceId.03-2.confidence', 1], ['getScoresBySourceId.03-3.confidence', 1], ['getScoresBySourceId.04.confidence', 1], ['getScoresBySourceId.04-1.confidence', 1], ['getScoresBySourceId.05.confidence', -1], ['getScoresBySourceId.05-1.confidence', 1], ['getScoresBySourceId.06.confidence', -1], ['getScoresBySourceId.06-1.confidence', 1], ['getScoresBySourceId.07.confidence', -1], ['getScoresBySourceId.07-1.confidence', 1], ['getScoresBySourceId.08.confidence', -1], ['getScoresBySourceId.08-1.confidence', 1], ['getScoresBySourceId.09.confidence', 0], ['getScoresBySourceId.09-1.confidence', -1], ['getScoresBySourceId.09-1-2.confidence', 1], ['getScoresBySourceId.10.confidence', 0], ['getScoresBySourceId.10-1.confidence', -1], ['getScoresBySourceId.10-1-1.confidence', 1], ['getScoresBySourceId.11.confidence', 0], ['getScoresBySourceId.11-1.confidence', -1], ['getScoresBySourceId.11-2.confidence', 1], ['getScoresBySourceId.12.confidence', 1], ['getScoresBySourceId.12-1.confidence', 1], ['getScoresBySourceId.12-2.confidence', 1], ['getScoresBySourceId.12-3.confidence', 1], ['getScoresBySourceId.12-4.confidence', 1], ['getScoresBySourceId.12-5.confidence', 1], ['getScoresBySourceId.12-6.confidence', 1]];
    const results = await (0, _buildTestResults.buildTestResults)(expectations, repository);
    expect(results).toMatchObject(expectations);
  });
  test('Fractions', async () => {
    const repository = new _RepositoryLocalPure.RepositoryLocalPure();
    await (0, _calculateScoreActions.calculateScoreActions)({
      actions: actionsBase,
      repository: repository
    });
    const expectations = [['getScoresBySourceId.mainClaim.fraction', 1], ['getScoresBySourceId.01.fraction', 0.23076923076923078], ['getScoresBySourceId.03.fraction', 0.07692307692307693], ['getScoresBySourceId.03-1.fraction', 0.02564102564102564], ['getScoresBySourceId.03-2.fraction', 0.02564102564102564], ['getScoresBySourceId.03-3.fraction', 0.02564102564102564], ['getScoresBySourceId.04.fraction', 0.46153846153846156], ['getScoresBySourceId.04-1.fraction', 0.46153846153846156], ['getScoresBySourceId.05.fraction', 0], ['getScoresBySourceId.05-1.fraction', 0], ['getScoresBySourceId.12.fraction', 0.23076923076923078], ['getScoresBySourceId.12-1.fraction', 0.23076923076923078], ['getScoresBySourceId.12-2.fraction', 0.23076923076923078], ['getScoresBySourceId.12-3.fraction', 0.23076923076923078], ['getScoresBySourceId.12-4.fraction', 0.23076923076923078], ['getScoresBySourceId.12-5.fraction', 0.23076923076923078], ['getScoresBySourceId.12-6.fraction', 0.23076923076923078]];
    const results = await (0, _buildTestResults.buildTestResults)(expectations, repository);
    expect(results).toMatchObject(expectations);
  });
  test('Deep fraction', async () => {
    const repository = new _RepositoryLocalPure.RepositoryLocalPure();
    const actionsDeepScores = [new _Action.Action(new _Claim.Claim('mainClaim', 'mainClaim'), u, 'add_claim'), new _Action.Action(new _ScoreTree.ScoreTree('mainClaim', 'mainClaim-score', u, 'ScoreTree'), u, 'add_scoreTree'), new _Action.Action(new _Claim.Claim('01', '01'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '01', u, con, '01-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('01-1', '01-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('01', '01-1', u, pro, '01-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('01-2', '01-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('01', '01-2', u, con, '01-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02', '02'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '02', u, pro, '02-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-1', '02-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02', '02-1', u, con, '02-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-2', '02-2'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02', '02-2', u, pro, '02-2-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-3', '02-3'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02', '02-3', u, pro, '02-3-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-4', '02-4'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02', '02-4', u, pro, '02-4-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('02-4-1', '02-4-1'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('02-4', '02-4-1', 'relevance', pro, '02-4-1-edge'), u, 'add_claimEdge'), new _Action.Action(new _Claim.Claim('03', '03'), u, 'add_claim'), new _Action.Action(new _ClaimEdge.ClaimEdge('mainClaim', '03', u, pro, '03-edge'), u, 'add_claimEdge')];
    await (0, _calculateScoreActions.calculateScoreActions)({
      actions: actionsDeepScores,
      repository: repository
    });
    const expectations = [['getScoresBySourceId.mainClaim.confidence', 0.8500000000000001], ['getScoresBySourceId.mainClaim.fraction', 1], ['getScoresBySourceId.01.confidence', 0], ['getScoresBySourceId.01.fraction', 0], ['getScoresBySourceId.01-1.confidence', 1], ['getScoresBySourceId.01-1.fraction', 0], ['getScoresBySourceId.01-2.confidence', 1], ['getScoresBySourceId.01-2.fraction', 0], ['getScoresBySourceId.02.confidence', 0.6000000000000001], ['getScoresBySourceId.02.fraction', 0.37500000000000006], ['getScoresBySourceId.02-1.confidence', 1], ['getScoresBySourceId.02-1.fraction', 0.07500000000000001], ['getScoresBySourceId.02-2.confidence', 1], ['getScoresBySourceId.02-2.fraction', 0.07500000000000001], ['getScoresBySourceId.02-3.confidence', 1], ['getScoresBySourceId.02-3.fraction', 0.07500000000000001], ['getScoresBySourceId.02-4.confidence', 1], ['getScoresBySourceId.02-4.fraction', 0.15000000000000002], ['getScoresBySourceId.02-4-1.confidence', 1], ['getScoresBySourceId.02-4-1.fraction', 0.15000000000000002], ['getScoresBySourceId.03.confidence', 1], ['getScoresBySourceId.03.fraction', 0.625], ['getScoresBySourceId.mainClaim.fractionSimple', 1], ['getScoresBySourceId.01.fractionSimple', 0.3333333333333333], ['getScoresBySourceId.01-1.fractionSimple', 0.16666666666666666], ['getScoresBySourceId.01-2.fractionSimple', 0.16666666666666666], ['getScoresBySourceId.02.fractionSimple', 0.3333333333333333], ['getScoresBySourceId.02-1.fractionSimple', 0.06666666666666667], ['getScoresBySourceId.02-2.fractionSimple', 0.06666666666666667], ['getScoresBySourceId.02-3.fractionSimple', 0.06666666666666667], ['getScoresBySourceId.02-4.fractionSimple', 0.13333333333333333], ['getScoresBySourceId.02-4-1.fractionSimple', 0.13333333333333333], ['getScoresBySourceId.03.fractionSimple', 0.3333333333333333]];
    const results = await (0, _buildTestResults.buildTestResults)(expectations, repository);
    expect(results).toMatchObject(expectations);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0cy9zY29yZVRlc3QudHMiXSwibmFtZXMiOlsic2NvcmVUZXN0cyIsInUiLCJ1bmRlZmluZWQiLCJwcm8iLCJjb24iLCJhY3Rpb25zQmFzZSIsIkFjdGlvbiIsIkNsYWltIiwiU2NvcmVUcmVlIiwiQ2xhaW1FZGdlIiwidGVzdCIsInJlcG9zaXRvcnkiLCJSZXBvc2l0b3J5TG9jYWxQdXJlIiwiYWN0aW9ucyIsImV4cGVjdGF0aW9ucyIsInJlc3VsdHMiLCJleHBlY3QiLCJ0b01hdGNoT2JqZWN0IiwiYWN0aW9uc0RlZXBTY29yZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFTyxTQUFTQSxVQUFULEdBQXNCO0FBRXpCLFFBQU1DLENBQUMsR0FBR0MsU0FBVjtBQUFBLFFBQXFCQyxHQUFHLEdBQUcsSUFBM0I7QUFBQSxRQUFpQ0MsR0FBRyxHQUFHLEtBQXZDO0FBRUEsUUFBTUMsV0FBcUIsR0FBRyxDQUMxQixJQUFJQyxjQUFKLENBQVcsSUFBSUMsWUFBSixDQUFVLFdBQVYsRUFBdUIsV0FBdkIsQ0FBWCxFQUFnRE4sQ0FBaEQsRUFBbUQsV0FBbkQsQ0FEMEIsRUFDdUMsSUFBSUssY0FBSixDQUFXLElBQUlFLG9CQUFKLENBQWMsV0FBZCxFQUEyQixpQkFBM0IsRUFBOENQLENBQTlDLEVBQWlELFdBQWpELENBQVgsRUFBMEVBLENBQTFFLEVBQTZFLGVBQTdFLENBRHZDLEVBRTFCLElBQUlLLGNBQUosQ0FBVyxJQUFJQyxZQUFKLENBQVUsSUFBVixFQUFnQixJQUFoQixDQUFYLEVBQWtDTixDQUFsQyxFQUFxQyxXQUFyQyxDQUYwQixFQUV5QixJQUFJSyxjQUFKLENBQVcsSUFBSUcsb0JBQUosQ0FBYyxXQUFkLEVBQTJCLElBQTNCLEVBQWlDUixDQUFqQyxFQUFvQ0csR0FBcEMsRUFBeUMsU0FBekMsQ0FBWCxFQUFnRUgsQ0FBaEUsRUFBbUUsZUFBbkUsQ0FG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QWZpQixFQWdCakIsQ0FBQyx1Q0FBRCxFQUEwQyxrQkFBMUMsQ0FoQmlCLEVBaUJqQixDQUFDLHlDQUFELEVBQTRDLG1CQUE1QyxDQWpCaUIsRUFrQmpCLENBQUMseUNBQUQsRUFBNEMsbUJBQTVDLENBbEJpQixFQW1CakIsQ0FBQyx5Q0FBRCxFQUE0QyxtQkFBNUMsQ0FuQmlCLEVBb0JqQixDQUFDLHlDQUFELEVBQTRDLG1CQUE1QyxDQXBCaUIsRUFxQmpCLENBQUMsMkNBQUQsRUFBOEMsbUJBQTlDLENBckJpQixFQXNCakIsQ0FBQyx1Q0FBRCxFQUEwQyxrQkFBMUMsQ0F0QmlCLENBQXJCO0FBd0JBLFVBQU1DLE9BQU8sR0FBRyxNQUFNLHdDQUFpQkQsWUFBakIsRUFBK0JILFVBQS9CLENBQXRCO0FBQ0FLLElBQUFBLE1BQU0sQ0FBQ0QsT0FBRCxDQUFOLENBQWdCRSxhQUFoQixDQUE4QkgsWUFBOUI7QUFDSCxHQTVDRyxDQUFKO0FBNkNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVwb3NpdG9yeUxvY2FsUHVyZSB9IGZyb20gXCIuLi9yZXBvc2l0b3JpZXMvUmVwb3NpdG9yeUxvY2FsUHVyZVwiO1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVTY29yZUFjdGlvbnMgfSBmcm9tIFwiLi4vY2FsY3VsYXRlU2NvcmVBY3Rpb25zXCI7XHJcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCIuLi9kYXRhTW9kZWxzL0FjdGlvblwiO1xyXG5pbXBvcnQgeyBDbGFpbSB9IGZyb20gXCIuLi9kYXRhTW9kZWxzL0NsYWltXCI7XHJcbmltcG9ydCB7IFNjb3JlVHJlZSB9IGZyb20gXCIuLi9kYXRhTW9kZWxzL1Njb3JlVHJlZVwiO1xyXG5pbXBvcnQgeyBDbGFpbUVkZ2UgfSBmcm9tIFwiLi4vZGF0YU1vZGVscy9DbGFpbUVkZ2VcIjtcclxuaW1wb3J0IHsgYnVpbGRUZXN0UmVzdWx0cyB9IGZyb20gXCIuL2J1aWxkVGVzdFJlc3VsdHNcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzY29yZVRlc3RzKCkge1xyXG5cclxuICAgIGNvbnN0IHUgPSB1bmRlZmluZWQsIHBybyA9IHRydWUsIGNvbiA9IGZhbHNlXHJcblxyXG4gICAgY29uc3QgYWN0aW9uc0Jhc2U6IEFjdGlvbltdID0gW1xyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCdtYWluQ2xhaW0nLCAnbWFpbkNsYWltJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgU2NvcmVUcmVlKCdtYWluQ2xhaW0nLCAnbWFpbkNsYWltLXNjb3JlJywgdSwgJ1Njb3JlVHJlZScpLCB1LCAnYWRkX3Njb3JlVHJlZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwMScsICcwMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnbWFpbkNsYWltJywgJzAxJywgdSwgY29uLCAnMDEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwMicsICcwMicpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnbWFpbkNsYWltJywgJzAyJywgdSwgcHJvLCAnMDItZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwMi0xJywgJzAyLTEnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzAyJywgJzAyLTEnLCB1LCBwcm8sICcwMi0xLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDItMicsICcwMi0yJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcwMicsICcwMi0yJywgdSwgY29uLCAnMDItMi1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAzJywgJzAzJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMDMnLCB1LCBwcm8sICcwMy1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAzLTEnLCAnMDMtMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDMnLCAnMDMtMScsIHUsIGNvbiwgJzAzLTEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwMy0yJywgJzAzLTInKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzAzJywgJzAzLTInLCB1LCBwcm8sICcwMy0yLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDMtMycsICcwMy0zJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcwMycsICcwMy0zJywgdSwgcHJvLCAnMDMtMy1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzA0JywgJzA0JyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMDQnLCB1LCBwcm8sICcwNC1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzA0LTEnLCAnMDQtMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDQnLCAnMDQtMScsICdyZWxldmFuY2UnLCBwcm8sICcwNC0xLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDUnLCAnMDUnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJ21haW5DbGFpbScsICcwNScsIHUsIHBybywgJzA1LWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDUtMScsICcwNS0xJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcwNScsICcwNS0xJywgdSwgY29uLCAnMDUtMS1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzA2JywgJzA2JyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMDYnLCB1LCBjb24sICcwNi1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzA2LTEnLCAnMDYtMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDYnLCAnMDYtMScsIHUsIGNvbiwgJzA2LTEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwNycsICcwNycpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnbWFpbkNsYWltJywgJzA3JywgdSwgcHJvLCAnMDctZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwNy0xJywgJzA3LTEnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzA3JywgJzA3LTEnLCB1LCBjb24sICcwNy0xLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDgnLCAnMDgnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJ21haW5DbGFpbScsICcwOCcsIHUsIGNvbiwgJzA4LWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDgtMScsICcwOC0xJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcwOCcsICcwOC0xJywgdSwgY29uLCAnMDgtMS1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzA5JywgJzA5JyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMDknLCB1LCBwcm8sICcwOS1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzA5LTEnLCAnMDktMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDknLCAnMDktMScsIHUsIHBybywgJzA5LTEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwOS0xLTInLCAnMDktMS0yJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcwOS0xJywgJzA5LTEtMicsIHUsIGNvbiwgJzA5LTEtMi1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzEwJywgJzEwJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMTAnLCB1LCBjb24sICcxMC1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzEwLTEnLCAnMTAtMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMTAnLCAnMTAtMScsIHUsIHBybywgJzEwLTEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcxMC0xLTEnLCAnMTAtMS0xJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcxMC0xJywgJzEwLTEtMScsIHUsIGNvbiwgJzEwLTEtMS1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzExJywgJzExJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMTEnLCB1LCBjb24sICcxMS1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzExLTEnLCAnMTEtMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMTEnLCAnMTEtMScsIHUsIGNvbiwgJzExLTEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcxMS0yJywgJzExLTInKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzExLTEnLCAnMTEtMicsIHUsIGNvbiwgJzExLTItZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcxMicsICcxMicpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnbWFpbkNsYWltJywgJzEyJywgdSwgcHJvLCAnMTItZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcxMi0xJywgJzEyLTEnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzEyJywgJzEyLTEnLCB1LCBwcm8sICcxMi0xLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMTItMicsICcxMi0yJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcxMi0xJywgJzEyLTInLCB1LCBwcm8sICcxMi0yLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMTItMycsICcxMi0zJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcxMi0yJywgJzEyLTMnLCB1LCBwcm8sICcxMi0zLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMTItNCcsICcxMi00JyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcxMi0zJywgJzEyLTQnLCB1LCBwcm8sICcxMi00LWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMTItNScsICcxMi01JyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcxMi00JywgJzEyLTUnLCB1LCBwcm8sICcxMi01LWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMTItNicsICcxMi02JyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcxMi01JywgJzEyLTYnLCB1LCBwcm8sICcxMi02LWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgIF1cclxuXHJcbiAgICB0ZXN0KCdPcmlnaW5hbCBTY29yZXMnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVwb3NpdG9yeSA9IG5ldyBSZXBvc2l0b3J5TG9jYWxQdXJlKCk7XHJcbiAgICAgICAgYXdhaXQgY2FsY3VsYXRlU2NvcmVBY3Rpb25zKHtcclxuICAgICAgICAgICAgYWN0aW9uczogYWN0aW9uc0Jhc2UsXHJcbiAgICAgICAgICAgIHJlcG9zaXRvcnk6IHJlcG9zaXRvcnlcclxuICAgICAgICB9KVxyXG4gICAgICAgIGNvbnN0IGV4cGVjdGF0aW9ucyA9IFtcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLm1haW5DbGFpbS5jb25maWRlbmNlJywgMC40ODcxNzk0ODcxNzk0ODcxN10sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMS5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi5jb25maWRlbmNlJywgMF0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAyLTIuY29uZmlkZW5jZScsIDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDMuY29uZmlkZW5jZScsIDAuMzMzMzMzMzMzMzMzMzMzM10sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMy0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAzLTIuY29uZmlkZW5jZScsIDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDMtMy5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wNC5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wNC0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA1LmNvbmZpZGVuY2UnLCAtMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wNS0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA2LmNvbmZpZGVuY2UnLCAtMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wNi0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA3LmNvbmZpZGVuY2UnLCAtMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wNy0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA4LmNvbmZpZGVuY2UnLCAtMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wOC0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA5LmNvbmZpZGVuY2UnLCAwXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA5LTEuY29uZmlkZW5jZScsIC0xXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA5LTEtMi5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMC5jb25maWRlbmNlJywgMF0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMC0xLmNvbmZpZGVuY2UnLCAtMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMC0xLTEuY29uZmlkZW5jZScsIDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTEuY29uZmlkZW5jZScsIDBdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTEtMS5jb25maWRlbmNlJywgLTFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTEtMi5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMi5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMi0xLmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjEyLTIuY29uZmlkZW5jZScsIDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItMy5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMi00LmNvbmZpZGVuY2UnLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjEyLTUuY29uZmlkZW5jZScsIDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItNi5jb25maWRlbmNlJywgMV0sXHJcbiAgICAgICAgXVxyXG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBidWlsZFRlc3RSZXN1bHRzKGV4cGVjdGF0aW9ucywgcmVwb3NpdG9yeSlcclxuICAgICAgICBleHBlY3QocmVzdWx0cykudG9NYXRjaE9iamVjdChleHBlY3RhdGlvbnMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGVzdCgnRnJhY3Rpb25zJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlcG9zaXRvcnkgPSBuZXcgUmVwb3NpdG9yeUxvY2FsUHVyZSgpO1xyXG4gICAgICAgIGF3YWl0IGNhbGN1bGF0ZVNjb3JlQWN0aW9ucyh7XHJcbiAgICAgICAgICAgIGFjdGlvbnM6IGFjdGlvbnNCYXNlLFxyXG4gICAgICAgICAgICByZXBvc2l0b3J5OiByZXBvc2l0b3J5XHJcbiAgICAgICAgfSlcclxuICAgICAgICBjb25zdCBleHBlY3RhdGlvbnMgPSBbXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC5tYWluQ2xhaW0uZnJhY3Rpb24nLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAxLmZyYWN0aW9uJywgMC4yMzA3NjkyMzA3NjkyMzA3OF0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMy5mcmFjdGlvbicsIDAuMDc2OTIzMDc2OTIzMDc2OTNdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDMtMS5mcmFjdGlvbicsIDAuMDI1NjQxMDI1NjQxMDI1NjRdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDMtMi5mcmFjdGlvbicsIDAuMDI1NjQxMDI1NjQxMDI1NjRdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDMtMy5mcmFjdGlvbicsIDAuMDI1NjQxMDI1NjQxMDI1NjRdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDQuZnJhY3Rpb24nLCAwLjQ2MTUzODQ2MTUzODQ2MTU2XSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA0LTEuZnJhY3Rpb24nLCAwLjQ2MTUzODQ2MTUzODQ2MTU2XSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjA1LmZyYWN0aW9uJywgMF0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wNS0xLmZyYWN0aW9uJywgMF0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4xMi5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItMS5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItMi5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItMy5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItNC5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItNS5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMTItNi5mcmFjdGlvbicsIDAuMjMwNzY5MjMwNzY5MjMwNzhdLFxyXG4gICAgICAgIF1cclxuICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgYnVpbGRUZXN0UmVzdWx0cyhleHBlY3RhdGlvbnMsIHJlcG9zaXRvcnkpXHJcbiAgICAgICAgZXhwZWN0KHJlc3VsdHMpLnRvTWF0Y2hPYmplY3QoZXhwZWN0YXRpb25zKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRlc3QoJ0RlZXAgZnJhY3Rpb24nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVwb3NpdG9yeSA9IG5ldyBSZXBvc2l0b3J5TG9jYWxQdXJlKCk7XHJcbiAgICAgICAgY29uc3QgYWN0aW9uc0RlZXBTY29yZXM6IEFjdGlvbltdID0gW1xyXG4gICAgICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnbWFpbkNsYWltJywgJ21haW5DbGFpbScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IFNjb3JlVHJlZSgnbWFpbkNsYWltJywgJ21haW5DbGFpbS1zY29yZScsIHUsICdTY29yZVRyZWUnKSwgdSwgJ2FkZF9zY29yZVRyZWUnKSxcclxuICAgICAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAxJywgJzAxJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMDEnLCB1LCBjb24sICcwMS1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwMS0xJywgJzAxLTEnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzAxJywgJzAxLTEnLCB1LCBwcm8sICcwMS0xLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAxLTInLCAnMDEtMicpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDEnLCAnMDEtMicsIHUsIGNvbiwgJzAxLTItZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDInLCAnMDInKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJ21haW5DbGFpbScsICcwMicsIHUsIHBybywgJzAyLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAyLTEnLCAnMDItMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDInLCAnMDItMScsIHUsIGNvbiwgJzAyLTEtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDItMicsICcwMi0yJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCcwMicsICcwMi0yJywgdSwgcHJvLCAnMDItMi1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXHJcbiAgICAgICAgICAgIG5ldyBBY3Rpb24obmV3IENsYWltKCcwMi0zJywgJzAyLTMnKSwgdSwgJ2FkZF9jbGFpbScpLCBuZXcgQWN0aW9uKG5ldyBDbGFpbUVkZ2UoJzAyJywgJzAyLTMnLCB1LCBwcm8sICcwMi0zLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAyLTQnLCAnMDItNCcpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDInLCAnMDItNCcsIHUsIHBybywgJzAyLTQtZWRnZScpLCB1LCAnYWRkX2NsYWltRWRnZScpLFxyXG4gICAgICAgICAgICBuZXcgQWN0aW9uKG5ldyBDbGFpbSgnMDItNC0xJywgJzAyLTQtMScpLCB1LCAnYWRkX2NsYWltJyksIG5ldyBBY3Rpb24obmV3IENsYWltRWRnZSgnMDItNCcsICcwMi00LTEnLCAncmVsZXZhbmNlJywgcHJvLCAnMDItNC0xLWVkZ2UnKSwgdSwgJ2FkZF9jbGFpbUVkZ2UnKSxcclxuICAgICAgICAgICAgbmV3IEFjdGlvbihuZXcgQ2xhaW0oJzAzJywgJzAzJyksIHUsICdhZGRfY2xhaW0nKSwgbmV3IEFjdGlvbihuZXcgQ2xhaW1FZGdlKCdtYWluQ2xhaW0nLCAnMDMnLCB1LCBwcm8sICcwMy1lZGdlJyksIHUsICdhZGRfY2xhaW1FZGdlJyksXVxyXG4gICAgICAgIGF3YWl0IGNhbGN1bGF0ZVNjb3JlQWN0aW9ucyh7XHJcbiAgICAgICAgICAgIGFjdGlvbnM6IGFjdGlvbnNEZWVwU2NvcmVzLFxyXG4gICAgICAgICAgICByZXBvc2l0b3J5OiByZXBvc2l0b3J5XHJcbiAgICAgICAgfSlcclxuICAgICAgICBjb25zdCBleHBlY3RhdGlvbnMgPSBbXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC5tYWluQ2xhaW0uY29uZmlkZW5jZScsIDAuODUwMDAwMDAwMDAwMDAwMV0sIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC5tYWluQ2xhaW0uZnJhY3Rpb24nLCAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAxLmNvbmZpZGVuY2UnLCAwXSwgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAxLmZyYWN0aW9uJywgMF0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMS0xLmNvbmZpZGVuY2UnLCAxXSwgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAxLTEuZnJhY3Rpb24nLCAwXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAxLTIuY29uZmlkZW5jZScsIDFdLCBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDEtMi5mcmFjdGlvbicsIDBdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDIuY29uZmlkZW5jZScsIDAuNjAwMDAwMDAwMDAwMDAwMV0sIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi5mcmFjdGlvbicsIDAuMzc1MDAwMDAwMDAwMDAwMDZdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItMS5jb25maWRlbmNlJywgMV0sIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi0xLmZyYWN0aW9uJywgMC4wNzUwMDAwMDAwMDAwMDAwMV0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi0yLmNvbmZpZGVuY2UnLCAxXSwgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAyLTIuZnJhY3Rpb24nLCAwLjA3NTAwMDAwMDAwMDAwMDAxXSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLjAyLTMuY29uZmlkZW5jZScsIDFdLCBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItMy5mcmFjdGlvbicsIDAuMDc1MDAwMDAwMDAwMDAwMDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItNC5jb25maWRlbmNlJywgMV0sIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi00LmZyYWN0aW9uJywgMC4xNTAwMDAwMDAwMDAwMDAwMl0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMi00LTEuY29uZmlkZW5jZScsIDFdLCBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItNC0xLmZyYWN0aW9uJywgMC4xNTAwMDAwMDAwMDAwMDAwMl0sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMy5jb25maWRlbmNlJywgMV0sIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMy5mcmFjdGlvbicsIDAuNjI1XSxcclxuICAgICAgICAgICAgWydnZXRTY29yZXNCeVNvdXJjZUlkLm1haW5DbGFpbS5mcmFjdGlvblNpbXBsZScsIDFdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDEuZnJhY3Rpb25TaW1wbGUnLCAwLjMzMzMzMzMzMzMzMzMzMzNdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDEtMS5mcmFjdGlvblNpbXBsZScsIDAuMTY2NjY2NjY2NjY2NjY2NjZdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDEtMi5mcmFjdGlvblNpbXBsZScsIDAuMTY2NjY2NjY2NjY2NjY2NjZdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDIuZnJhY3Rpb25TaW1wbGUnLCAwLjMzMzMzMzMzMzMzMzMzMzNdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItMS5mcmFjdGlvblNpbXBsZScsIDAuMDY2NjY2NjY2NjY2NjY2NjddLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItMi5mcmFjdGlvblNpbXBsZScsIDAuMDY2NjY2NjY2NjY2NjY2NjddLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItMy5mcmFjdGlvblNpbXBsZScsIDAuMDY2NjY2NjY2NjY2NjY2NjddLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItNC5mcmFjdGlvblNpbXBsZScsIDAuMTMzMzMzMzMzMzMzMzMzMzNdLFxyXG4gICAgICAgICAgICBbJ2dldFNjb3Jlc0J5U291cmNlSWQuMDItNC0xLmZyYWN0aW9uU2ltcGxlJywgMC4xMzMzMzMzMzMzMzMzMzMzM10sXHJcbiAgICAgICAgICAgIFsnZ2V0U2NvcmVzQnlTb3VyY2VJZC4wMy5mcmFjdGlvblNpbXBsZScsIDAuMzMzMzMzMzMzMzMzMzMzM10sXHJcbiAgICAgICAgXVxyXG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBidWlsZFRlc3RSZXN1bHRzKGV4cGVjdGF0aW9ucywgcmVwb3NpdG9yeSlcclxuICAgICAgICBleHBlY3QocmVzdWx0cykudG9NYXRjaE9iamVjdChleHBlY3RhdGlvbnMpO1xyXG4gICAgfSk7XHJcbn0iXX0=